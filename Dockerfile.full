# Multi-stage build for complete Linux application with full IMDb data
FROM maven:3.9.6-openjdk-21-slim AS build

# Install required packages for data processing
RUN apt-get update && apt-get install -y \
    wget \
    unzip \
    postgresql-client \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy pom.xml and download dependencies
COPY pom.xml .
RUN mvn dependency:go-offline -B

# Copy source code
COPY src ./src

# Build the application
RUN mvn clean package -DskipTests

# Production stage with Tomcat and full data
FROM tomcat:10.1-jdk21

# Install required packages
RUN apt-get update && apt-get install -y \
    wget \
    unzip \
    postgresql-client \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Remove default ROOT application
RUN rm -rf /usr/local/tomcat/webapps/ROOT*

# Copy WAR file
COPY --from=build /app/target/theMovieDBIntegrated-0.0.1-SNAPSHOT.war /usr/local/tomcat/webapps/ROOT.war

# Create application user
RUN useradd -m -s /bin/bash appuser

# Create necessary directories
RUN mkdir -p /app/data /app/logs /usr/local/tomcat/logs
RUN chown -R appuser:appuser /app /usr/local/tomcat/logs

# Copy initialization scripts
COPY init-scripts/* /docker-entrypoint-initdb.d/
COPY src/main/resources/data.sql /app/data/
COPY src/main/resources/db/migration/V1__Initial_Schema.sql /app/data/

# Set proper permissions
RUN chmod +x /usr/local/tomcat/webapps/ROOT.war
RUN chmod +x /docker-entrypoint-initdb.d/*

# Create startup script
RUN echo '#!/bin/bash\n\
# Start PostgreSQL\n\
echo "Starting PostgreSQL..."\n\
docker-entrypoint.sh postgres &\n\
POSTGRES_PID=$!\n\
\n\
# Wait for PostgreSQL to be ready\n\
echo "Waiting for PostgreSQL..."\n\
sleep 15\n\
\n\
# Initialize database if needed\n\
echo "Checking database setup..."\n\
if ! psql -h localhost -U postgres -d imdb -c "SELECT 1 FROM title_basics LIMIT 1" >/dev/null 2>&1; then\n\
    echo "Loading database schema..."\n\
    psql -h localhost -U postgres -d imdb -f /app/data/V1__Initial_Schema.sql\n\
    echo "Loading sample data..."\n\
    psql -h localhost -U imdb -d imdb -f /app/data/data.sql\n\
    echo "Database initialized with sample data"\n\
else\n\
    echo "Database already has data"\n\
fi\n\
\n\
# Wait for PostgreSQL process\n\
wait $POSTGRES_PID\n\
' > /app/start-postgres.sh

RUN chmod +x /app/start-postgres.sh

# Expose ports
EXPOSE 5432 8080

# Create entrypoint script
RUN echo '#!/bin/bash\n\
echo "Starting IMDb Movie Explorer..."\n\
\n\
# Start PostgreSQL in background\n\
/app/start-postgres.sh &\n\
\n\
# Wait a moment for PostgreSQL to start\n\
sleep 5\n\
\n\
# Start Tomcat\n\
echo "Starting Tomcat..."\n\
cd /usr/local/tomcat\n\
bin/catalina.sh run\n\
' > /app/start.sh

RUN chmod +x /app/start.sh

# Switch to appuser
USER appuser

# Set working directory
WORKDIR /app

# Use the startup script as entrypoint
ENTRYPOINT ["/app/start.sh"]
